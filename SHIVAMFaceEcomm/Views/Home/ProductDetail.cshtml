@model SHIVAMFaceEcomm.Models.ProductDetail
@{
    ViewBag.Title = "Product Detail";
    var allAttributes = Model.Attributes.Select(p => p.AttributeName).Distinct().ToList();
    var _AllProductImages = Model.Attributes.GroupBy(test => test.ProductQuantityId)
                    .Select(grp => grp.First())
                    .ToList();
    var _ImagePath = "";
    if (_AllProductImages.Count() > 0)
    {
        _ImagePath = _AllProductImages[0].ImagePath;
    }

    if (!string.IsNullOrEmpty(_ImagePath))
    {
        _ImagePath = "";
    }

    var serializer = new System.Web.Script.Serialization.JavaScriptSerializer();
    serializer.MaxJsonLength = Int32.MaxValue;
    var jsonModel = serializer.Serialize(Model.Attributes);
    var jsonModel1 = serializer.Serialize(allAttributes);

}






<section class="section white-backgorund">
    <div ng-controller="PaginationCtrl">
        @Html.Partial("shoppingcart")

    </div>
    <div class="container" ng-app="MyApp" ng-controller="CustomerReviewController">
        <div class="row">
            <!-- start sidebar -->
            <div class="col-sm-4">
                <div class='carousel slide product-slider' data-ride='carousel' data-interval="false">
                    <div class='carousel-inner'>
                        @if (_AllProductImages.Count() != 0)
                        {

                            for (int i = 0; i < _AllProductImages.Count(); i++)
                            {
                                if (i == 0)
                                {
                                    <div class='item active'>
                                        <figure>

                                            @if (!string.IsNullOrEmpty(_AllProductImages[i].ImagePath))
                                            {
                                                <div class="magnify">

                                                    <div class="large"></div>

                                                    <img class="small" src="@SHIVAMFaceEcomm.MvcApplication.GlobalImageAssetUrl/ProductImages/@_AllProductImages[i].ImagePath" width="200" />

                                                </div>



                                            }
                                            else
                                            {

                                                <div class="magnify">

                                                    <div class="large"></div>
                                                    <img src="~/Content/images/no-image.png" />


                                                </div>
                                            }





                                        </figure>
                                    </div><!-- end item -->
                                }
                                else
                                {
                                    <div class='item'>
                                        <figure>
                                            @if (!string.IsNullOrEmpty(_AllProductImages[i].ImagePath))
                                            {
                                                <div class="magnify">

                                                    <div class="large"></div>

                                                    <img class="small" src="@SHIVAMFaceEcomm.MvcApplication.GlobalImageAssetUrl/ProductImages/@_AllProductImages[i].ImagePath" width="200" />

                                                </div>
                                            }
                                            else
                                            {

                                                <div class="magnify">

                                                    <div class="large"></div>
                                                    <img src="~/Content/images/no-image.png" />


                                                </div>
                                            }


                                        </figure>
                                    </div><!-- end item -->
                                }



                            }
                        }
                        else
                        {
                            <div class='item active'>
                                <figure>
                                    <div class="magnify">

                                        <div class="large"></div>

                                        <img src="/Content/images/default-no-image.png" alt="" width="200">


                                    </div>



                                </figure>
                            </div>
                        }


                        <!-- Arrows -->
                        <a class='left carousel-control' href='.product-slider' data-slide='prev'>
                            <span class='fa fa-angle-left'></span>
                        </a>
                        <a class='right carousel-control' href='.product-slider' data-slide='next'>
                            <span class='fa fa-angle-right'></span>
                        </a>
                    </div><!-- end carousel-inner -->
                    <!-- thumbs -->
                    <ol class='carousel-indicators mCustomScrollbar meartlab'>
                        @if (_AllProductImages.Count() != 0)
                        {
                            for (int i = 0; i < _AllProductImages.Count(); i++)
                            {
                                <li data-target='.product-slider' data-slide-to='@i'>
                                    @if (!string.IsNullOrEmpty(_AllProductImages[i].ImagePath))
                                    {
                                            <img src="@SHIVAMFaceEcomm.MvcApplication.GlobalImageAssetUrl/ProductImages/@_AllProductImages[i].ImagePath"/>

                                    }
                                    else
                                    {
                                            <img src="~/Content/images/no-image.png" />

                                       }

                                </li>
                            }
                        }
                        else
                        {
                            <li data-target='.product-slider' data-slide-to='0'>
                                <img src="/Content/images/default-no-image.png" alt="">
                            </li>
                        }

                    </ol><!-- end carousel-indicators -->
                </div><!-- end carousel -->
            </div><!-- end col -->
            <!-- end sidebar -->
            <div class="col-sm-8">
                <div class="row">
                    <div class="col-sm-12">
                        <h2 class="title">@Model.Product.ProductName</h2>
                        <p class="text-gray alt-font">Product code: @Model.Product.ProductCode</p>

                        <ul class="list list-inline">

                            <li><h5 class="text-primary">$<span id="Productprice"> 79.88</span></h5></li>
                            <li>
                                <i class="fa fa-star text-warning"></i>
                                <i class="fa fa-star text-warning"></i>
                                <i class="fa fa-star text-warning"></i>
                                <i class="fa fa-star text-warning"></i>
                                <i class="fa fa-star-half-o text-warning"></i>
                            </li>
                            <li><a href="javascript:void(0);">(4 reviews)</a></li>
                        </ul>
                    </div><!-- end col -->
                </div><!-- end row -->

                <hr class="spacer-5"><hr class="spacer-10 no-border">

                <div class="row">
                    <div class="col-sm-12">
                        <p>@Model.Product.Description</p>

                        <hr class="spacer-15">
                        <div class="row">

                            @*  @for (int i = 0; i < allAttributes.Count(); i++)
                                {
                                   <div class="col-md-3 col-sm-6 col-xs-12">
                                        <dl class="param param-feature">
                                            <dt>@allAttributes[i]</dt>
                                            @{
                                    var allattributeV = Model.Attributes.Where(p => p.AttributeName == allAttributes[i]).Select(p => p.AttributeValue).Distinct().ToList();
                                            }
                                            <dd>
                                                <select class="form-control" id="attribute@(i+1)" onchange="GetAttributeDate(@allAttributes[i])" attributename="@allAttributes[i]">
                                                    @for (int k = 0; k < allattributeV.Count(); k++)
                                                    {
                                                    <option value="@allattributeV[k]"> @allattributeV[k] </option>
                                                    }


                                                </select>
                                            </dd>
                                        </dl>
                                    </div>
                                                        }*@


                            <div class="col-md-3 col-sm-6 col-xs-12" ng-repeat="obj in AttributesName track by $index">
                                <dl class="param param-feature">
                                    <dt>{{obj.Label}}</dt>

                                    <dd>
                                        <select class="form-control" ng-model="obj.Value" ng-change="GetPrice(obj.Value,obj.Label)" id="attribute{{$index+1}}" attributename="{{obj.Label}}">

                                            <option value="{{innerobject}}" ng-repeat="innerobject in GetAttributesData(obj.Label) track by $index"> {{innerobject}} </option>


                                        </select>
                                    </dd>
                                </dl>  <!-- item-property-hor .// -->
                            </div>
                            <!-- end col -->
                            <div class="col-md-3 col-sm-12">
                                <dl class="param param-feature">
                                    <dt>QTY</dt>

                                    <dd>
                                        @*<select class="form-control" name="select">
                                            <option value="">1</option>
                                            <option value="">2</option>
                                            <option value="">3</option>
                                            <option value="">4</option>
                                            <option value="">5</option>
                                            <option value="">6</option>
                                            <option value="">7</option>
                                        </select>*@
                                        <input type="number" min="1" class="form-control quantityFigure1" value="1">

                                    </dd>
                                </dl>  <!-- item-property-hor .// -->

                            </div><!-- end col -->
                        </div><!-- end row -->
                        <hr class="spacer-15">

                        <ul class="list list-inline">
                            <li><button type="button" ng-click="AddToCart()" class="btn btn-default btn-md round"><i class="fa fa-shopping-basket mr-5"></i>Add to Cart</button></li>
                            <li><button type="button" id="rzp-button1" class="btn btn-gray btn-md round"><i class="fa fa-heart mr-5"></i>Buy Now</button></li>
                            <li>Share this product: </li>
                            <li>
                                <ul class="social-icons style1">
                                    <li class="facebook"><a href="javascript:void(0);"><i class="fa fa-facebook"></i></a></li>
                                    <li class="twitter"><a href="javascript:void(0);"><i class="fa fa-twitter"></i></a></li>
                                    <li class="pinterest"><a href="javascript:void(0);"><i class="fa fa-pinterest"></i></a></li>
                                </ul>
                            </li>
                        </ul>
                    </div><!-- end col -->
                </div><!-- end row -->
            </div><!-- end col -->
        </div><!-- end row -->

        <hr class="spacer-60">

        <div class="row">
            <div class="col-xs-12 col-sm-3">
                <!-- Nav tabs -->
                <ul class="nav nav-tabs style2 tabs-left">
                    <li class="active"><a href="#description" data-toggle="tab">Additional Info</a></li>
                    <li><a href="#reviews" data-toggle="tab">Reviews ({{reviews.length}})</a></li>
                </ul>
            </div><!-- end col -->
            <div class="col-xs-12 col-sm-9">
                <!-- Tab panes -->
                <div class="tab-content style2">
                    <div class="tab-pane active" id="description">
                        <h5>Additional Info</h5>
                        <p>
                            @Model.Product.Description
                        </p>

                        <hr class="spacer-15">

                        <div class="row">
                            <div class="col-sm-12 col-md-6">
                                <dl class="dl-horizontal">


                                    @for (int i = 0; i < allAttributes.Count(); i++)
                                    {


                                        <dt>@allAttributes[i]</dt>
                                        {
                                            var allattributeV = Model.Attributes.Where(p => p.AttributeName == allAttributes[i]).Select(p => p.AttributeValue).Distinct().ToList();

                                            <dd>

                                                @for (int k = 0; k < allattributeV.Count(); k++)
                                                {
                                                    if ((allattributeV.Count() - 1) == k)
                                                    {
                                                        @allattributeV[k]
                                                    }
                                                    else
                                                    {
                                                        @(allattributeV[k] + ",")
                                                    }


                                                }



                                            </dd>
                                        }

                                    }






                                </dl>
                            </div><!-- end col -->
                            <div class="col-sm-12 col-md-6">
                                <dl class="dl-horizontal">
                                    <dt>Weight</dt>
                                    <dd>1.65 kg</dd>
                                    <dt>Manufacturer</dt>
                                    <dd>Istanbul</dd>
                                </dl>
                            </div><!-- end col -->
                        </div><!-- end row -->
                    </div><!-- end tab-pane -->
                    <div class="tab-pane" id="reviews">
                        <h5>{{reviews.length}} Review for "@Model.Product.ProductName"</h5>

                        <hr class="spacer-10 no-border">

                        <div class="comments" ng-repeat="rev in reviews">
                            <div class="comment-image">
                                <figure>
                                    <img src="img/team/team_01.jpg" alt="" />
                                </figure>
                            </div><!-- end comments-image -->
                            <div class="comment-content">
                                <div class="comment-content-head">
                                    <h6 class="comment-title">{{rev.Email}}</h6>
                                    <ul class="list list-inline comment-meta">
                                        <li>
                                            <i class="fa fa-star text-warning"></i>
                                            <i class="fa fa-star text-warning"></i>
                                            <i class="fa fa-star text-warning"></i>
                                            <i class="fa fa-star text-warning"></i>
                                            <i class="fa fa-star text-warning"></i>
                                        </li>
                                    </ul>
                                </div><!-- end comment-content-head -->
                                <p>{{rev.Review}}</p>
                                <cite>{{rev.Name}}</cite>
                            </div><!-- end comment-content -->
                        </div><!-- end comments -->



                        <hr class="spacer-30">

                        <h5>Add a review</h5>
                        <p>How do you rate this product?</p>

                        <hr class="spacer-5 no-border">

                        @*<form>
                                <input type="text" class="rating rating-loading" value="5" data-size="sm" title="">
                            </form>*@

                        <i class="fa fa-star {{GetSelectedClass(1)}}" ng-click="review.Rating=1"></i>
                        <i class="fa fa-star {{GetSelectedClass(2)}}" ng-click="review.Rating=2"></i>
                        <i class="fa fa-star {{GetSelectedClass(3)}}" ng-click="review.Rating=3"></i>
                        <i class="fa fa-star {{GetSelectedClass(4)}}" ng-click="review.Rating=4"></i>
                        <i class="fa fa-star {{GetSelectedClass(5)}}" ng-click="review.Rating=5"></i>
                        <hr class="spacer-10 no-border">

                        <div class="form-group">
                            <label for="reviewName">Name</label>
                            <input type="text" id="reviewName" ng-model="review.Name" class="form-control input-md" placeholder="Your Name">
                        </div><!-- end form-group -->
                        <div class="form-group">
                            <label for="reviewEmail">E-mail</label>
                            <input type="text" id="reviewEmail" ng-model="review.Email" class="form-control input-md" placeholder="Your E-mail">
                        </div><!-- end form-group -->
                        <div class="form-group">
                            <label for="reviewMessage">Review</label>
                            <textarea id="reviewMessage" rows="5" ng-model="review.Review" class="form-control" placeholder="Your review"></textarea>
                        </div><!-- end form-group -->
                        <div class="form-group">
                            <input type="button" ng-disabled="IsDisabled()" id="AddReview" class="btn btn-default round btn-md" ng-click="AddReview()" value="Submit Review">
                        </div><!-- end form-group -->
                    </div><!-- end tab-pane -->
                </div><!-- end tab-content -->
            </div><!-- end col -->
        </div><!-- end row -->

        <hr class="spacer-60">

        <div class="row">
            <div class="col-sm-12">
                <h4 class="mb-20">You May Also Like</h4>
            </div><!-- end col -->
        </div><!-- end row -->

        <div class="row">
            <div class="col-sm-12">
                <div id="owl-demo" class="owl-carousel column-10 owl-theme">
                    <div class="item" ng-repeat="item in RelatedProducts">
                        <div class="thumbnail store style1">
                            <div class="header">
                                <figure>
                                    <a href="/Home/ProductDetail/?productId={{item.ProductID}}">
                                        <img src="img/products/bags_03.jpg" alt="">
                                    </a>
                                </figure>
                            </div>
                            <div class="caption">
                                <h6 class="regular"><a href="/Home/ProductDetail/?productId={{item.ProductID}}">{{item.ProductName}}</a></h6>
                                <div class="price">
                                    <small class="amount off">$68.99</small>
                                    <span class="amount text-primary">${{item.ProductPrice}}</span>
                                </div>
                                @*<span class="product-badge bottom left text-warning">
                                        <i class="fa fa-star"></i>
                                        <i class="fa fa-star"></i>
                                        <i class="fa fa-star"></i>
                                        <i class="fa fa-star-half-o"></i>
                                        <i class="fa fa-star-o"></i>
                                    </span>*@
                            </div><!-- end caption -->
                        </div><!-- end thumbnail -->
                    </div><!-- end item -->

                </div><!-- end owl carousel -->
            </div><!-- end col -->
        </div><!-- end row -->
    </div><!-- end container -->
</section>
@section scripts
{
    @*<style>
            .row > .column {
                padding: 0 8px;
            }

            .row:after {
                content: "";
                display: table;
                clear: both;
            }

            .column {
                float: left;
                width: 50px;
                height: 50px;
                margin: 10px;
            }

            /* The Modal (background) */
            .modal {
                display: none;
                position: fixed;
                z-index: 1;
                padding-top: 100px;
                left: 0;
                top: 0;
                width: 100%;
                height: 100%;
                overflow: auto;
                background-color: black;
            }

            /* Modal Content */
            .modal-content {
                position: relative;
                background-color: #fefefe;
                margin: auto;
                padding: 0;
                width: 90%;
                max-width: 1200px;
            }

            /* The Close Button */
            .close {
                color: white;
                position: absolute;
                top: 10px;
                right: 25px;
                font-size: 35px;
                font-weight: bold;
            }

                .close:hover,
                .close:focus {
                    color: #999;
                    text-decoration: none;
                    cursor: pointer;
                }

            .mySlides {
                display: none;
            }

            .cursor {
                cursor: pointer;
            }

            /* Next & previous buttons */
            .prev,
            .next {
                cursor: pointer;
                position: absolute;
                top: 50%;
                width: auto;
                padding: 16px;
                margin-top: -50px;
                color: white;
                font-weight: bold;
                font-size: 20px;
                transition: 0.6s ease;
                border-radius: 0 3px 3px 0;
                user-select: none;
                -webkit-user-select: none;
            }

            /* Position the "next button" to the right */
            .next {
                right: 0;
                border-radius: 3px 0 0 3px;
            }

                /* On hover, add a black background color with a little bit see-through */
                .prev:hover,
                .next:hover {
                    background-color: rgba(0, 0, 0, 0.8);
                }

            /* Number text (1/3 etc) */
            .numbertext {
                color: #f2f2f2;
                font-size: 12px;
                padding: 8px 12px;
                position: absolute;
                top: 0;
            }

            img {
                margin-bottom: -4px;
            }

            .caption-container {
                text-align: center;
                background-color: black;
                padding: 2px 16px;
                color: white;
            }

            .demo {
                opacity: 0.6;
            }

                .active,
                .demo:hover {
                    opacity: 1;
                }

            img.hover-shadow {
                transition: 0.3s;
            }

            .hover-shadow:hover {
                box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
            }
        </style>*@
<style>
    /*Some CSS*/
    * {
        margin: 0;
        padding: 0;
    }

    .magnify {
        width: 200px;
        margin: 50px auto;
        position: relative;
        cursor: none;
    }

    /*Lets create the magnifying glass*/
    .large {
        width: 175px;
        height: 175px;
        position: absolute;
        border-radius: 100%;
        /*Multiple box shadows to achieve the glass effect*/
        box-shadow: 0 0 0 7px rgba(255, 255, 255, 0.85), 0 0 7px 7px rgba(0, 0, 0, 0.25), inset 0 0 40px 2px rgba(0, 0, 0, 0.25);
        /*hide the glass by default*/
        display: none;
    }

    /*To solve overlap bug at the edges during magnification*/
    .small {
        display: block;
    }
</style>

    <script>
        // for quantity not take 0 or null value
    $(document).on("keydown", ".quantityFigure1", function (e) {
        debugger;
        if (!((e.keyCode > 95 && e.keyCode < 106)
          || (e.keyCode > 47 && e.keyCode < 58)
          || e.keyCode == 8)) {
            return false;
                       
        }
                 

    });
    $(document).on("focusout", ".quantityFigure1", (function () {
              
        debugger;
        var _Value = parseFloat($(this).val());
        if ($.trim(_Value) == null || $.trim(_Value)=='NaN' || $.trim(_Value) == 0) {

            $(this).val(1);
            $(this).trigger("input");
            $(this).trigger("change");
        }
        else {
            return true;
        }
    }));

        
    $(document).on("keypress", ".quantityFigure1", (function () {
        debugger
        var _maxValue = parseFloat($(this).attr("data-max"));
        var _Value = parseFloat($(this).val());
        Qvalue = parseFloat($(this).val());
        if($.trim(_Value)!="")
        {
            if(_Value>_maxValue){
                toastr.error("Don't have that much quantity");
                $(this).val(1);
                $(this).trigger("input");
                $(this).trigger("change");
            }
        }
               
    }));
    $(document).on("change", ".quantityFigure1", (function () {
        var _maxValue = parseFloat($(this).attr("data-max"));
        debugger;
        var _Value = parseFloat($(this).val());
              
                
        if ($.trim(_Value) != ""&& $.trim(_Value<1)) {
            if (_Value > _maxValue) {
                toastr.error("Don't have that much quantity");
                $(this).val(1);
                $(this).trigger("input");
                $(this).trigger("change");
            }
        }

    }));



    </script>
    <script>
        function openModal() {
            document.getElementById('myModal').style.display = "block";
        }

        function closeModal() {
            document.getElementById('myModal').style.display = "none";
        }

        var slideIndex = 1;
        showSlides(slideIndex);

        function plusSlides(n) {
            showSlides(slideIndex += n);
        }

        function currentSlide(n) {
            showSlides(slideIndex = n);
        }

        function showSlides(n) {
            var i;
            var slides = document.getElementsByClassName("mySlides");
            var dots = document.getElementsByClassName("demo");
            var captionText = document.getElementById("caption");
            if (n > slides.length) { slideIndex = 1 }
            if (n < 1) { slideIndex = slides.length }
            for (i = 0; i < slides.length; i++) {
                slides[i].style.display = "none";
            }
            for (i = 0; i < dots.length; i++) {
                dots[i].className = dots[i].className.replace(" active", "");
            }
            slides[slideIndex - 1].style.display = "block";
            dots[slideIndex - 1].className += " active";
            captionText.innerHTML = dots[slideIndex - 1].alt;
        }
    </script>
    <script src="~/Scripts/AngularData/App.js"></script>
    <script src="~/Scripts/AngularData/Products.js"></script>
    <script>
        var _customerID = "";

        var _AttributesData='@Html.Raw(jsonModel)';
        var _Data= '@Html.Raw(jsonModel1)';
        console.log("Main Attributes");
        console.log(JSON.parse(_AttributesData));
        console.log("Main Data");
        console.log(_Data);
        var _ProductData={ ProductId: '@Model.Product.Id', Image: '@_ImagePath', Quantity: 1, ProductName: '@Model.Product.ProductName', Cost: 0, discount: 0 };
        var ProductId=@Model.ProductQuantityID;
        app.controller("CustomerReviewController", function ($scope,$rootScope, AddToCart, CartToCookieService) {
            $scope.AttributesName=[];
            $scope.RelatedProducts=[];
            $scope.AttributesData=JSON.parse(_AttributesData);
            var _AttributesName=JSON.parse(_Data);

            for (var i = 0; i < _AttributesName.length; i++) {
                $scope.AttributesName.push({Label:_AttributesName[i],Value:""});
            }

            console.log($scope.AttributesName);
            var items = CartToCookieService.getCookieData();
            if (items != undefined) {

                $scope.AllCartItems = items;


                $scope.CartProductsCounter = $scope.AllCartItems.length;
            }
            $scope.reviews=[];
            $scope.review={
                "ProductId": ProductId,
                "Name": null,
                "Email": null,
                "Review": null,
                "Rating":0
            };
            $scope.AddToCart = function () {

                debugger;

                product=_ProductData;

                var item = $scope.AllCartItems.filter(function (item) {
                    if (item.ProductId === product.ProductId) {
                        item.Quantity = item.Quantity + 1;
                    }
                    return item.ProductId === product.ProductId;
                })[0];
                if (item == undefined) {
                    $scope.CartProductsCounter++;
                    $('html, body').animate({
                        'scrollTop': $(".cart_anchor").position().top
                    });
                    $scope.AllCartItems.push({ ProductId: product.ProductId, Image: product.Image, Quantity: 1, ProductName: product.ProductName, Cost: product.ProductPrice, discount: 0 });

                }
                CartToCookieService.setCookieData($scope.AllCartItems);
                $rootScope.$emit("CallGetCookieData", {});

            };


            function CheckIfValueAvailable(Column,Value)
            {
                var _attributesDataArray = JSON.parse(_AttributesData);

                for (var i = 0; i < _attributesDataArray.length; i++) {
                    if(_attributesDataArray[i].AttributeName==Column && _attributesDataArray[i].AttributeValue==Value)
                    {
                        return i;
                    }

                }

                return -1;
            }

            $scope.GetPrice=function(Value,Label)
            {
                var _attributesDataArray = JSON.parse(_AttributesData);
                var _attributesArray=[];
                var _attributeNameArray=JSON.parse(_Data);
              
                for (var i = 0; i < _attributeNameArray.length; i++) {
                    var _ID="#attribute"+(i+1);
                    _attributesArray.push({ColumnName:$(_ID).attr("attributename"),Value:$(_ID).val()})

                }

                var _TempArray=[];

                for (var i = 0; i < _attributesArray.length; i++) {
                    var _value=CheckIfValueAvailable(_attributesArray[i].ColumnName,_attributesArray[i].Value);
                    if(_value!=-1)
                    {
                        _TempArray.push(_value);
                    }

                }

                var _Quantity=-1;

                if(_TempArray.length==_attributesArray.length)
                {
                    alert(_attributesDataArray[_TempArray[_TempArray.length-1]].Quantity);
                    $(".quantityFigure1").attr("data-max",_attributesDataArray[_TempArray[_TempArray.length-1]].Quantity);
                    $("#Productprice").html(_attributesDataArray[_TempArray[_TempArray.length-1]].Cost);
                }




            }
            $scope.GetAttributesData=function(Data){
                var _array=[];
                for (var i = 0; i < $scope.AttributesData.length; i++) {
                    if($scope.AttributesData[i].AttributeName==Data)
                    {
                        if($.trim($scope.AttributesData[i].AttributeValue))
                        {
                            var itemdata = _array.filter(function (item) {

                                return item === $scope.AttributesData[i].AttributeValue;
                            })[0];

                            if(itemdata==undefined || itemdata==null)
                            {
                                _array.push($scope.AttributesData[i].AttributeValue);

                            }

                        }
                    }

                }

                return _array;
            }

            $scope.GetSelectedClass=function(rating)
            {
                if($scope.review.Rating==rating || $scope.review.Rating>rating)
                {
                    return "text-warning";
                }
                return "";
            }
            $scope.IsDisabled=function(){
                if($.trim($scope.review.Name)=="" || $.trim($scope.review.Email)=="" ||$.trim($scope.review.Review)=="")
                {
                    return true;
                }
                return false;
            }
            $scope.AddReview=function()
            {
                $("#AddReview").addClass("disabled");
                $.ajax({
                    type: 'POST',
                    url: "/api/CustomerReviews/PostCustomerReview",
                    data: $scope.review,
                    dataType: "Json",
                    success: function(resultData) {   $scope.GetReviews();
                        $scope.review={
                            "ProductId": ProductId,
                            "Name": null,
                            "Email": null,
                            "Review": null,
                            "Rating":0
                        };
                        $("#AddReview").removeClass("disabled");
                    }
                });
            };

            $scope.GetRelatedProducts=function()
            {

                $.ajax({
                    type: 'Get',
                    url: "/Home/GetRelatedProducts?ProductId="+ProductId,
                    dataType: "json",
                    success: function(resultData) {
                        if(resultData.success==true)
                        {

                            $scope.RelatedProducts=resultData.data;
                            $scope.$apply();
                            $(".owl-carousel.column-10").owlCarousel({
                                nav : true, // Show next and prev buttons
                                navText: false,
                                dots: false,
                                items: $scope.RelatedProducts.length,
                                margin: 15,
                                responsiveClass: true,
                                responsive:{
                                    0:{
                                        items:1
                                    },
                                    600:{
                                        items:2
                                    },
                                    1000:{
                                        items:$scope.RelatedProducts.length
                                    }
                                }
                            });
                        }
                        else{
                            alert(resultData.error);
                        }
                    }
                });
            }
            $scope.GetReviews=function()
            {
                $.ajax({
                    type: 'Get',
                    url: "/api/CustomerReviews/GetCustomerReviews?ProductId="+ProductId,
                    dataType: "json",
                    success: function(resultData) {

                        $scope.reviews=resultData;
                        $scope.$apply(); }
                });
            };
            $scope.GetReviews();

            $scope.GetRelatedProducts();
        });
    </script>

    <script>
        $(document).ready(function(){

            var native_width = 0;
            var native_height = 0;
        
            //$(".large").css("background","url('" + $(".small").attr("src") + "') no-repeat");

            //Now the mousemove function
            $(".magnify").mousemove(function(e){

                $(this).find(".large").css("background","url('" +  $(this).find(".small").attr("src") + "') no-repeat");
                
                //When the user hovers on the image, the script will first calculate
                //the native dimensions if they don't exist. Only after the native dimensions
                //are available, the script will show the zoomed version.
                if(!native_width && !native_height)
                {
                    //This will create a new image object with the same image as that in .small
                    //We cannot directly get the dimensions from .small because of the
                    //width specified to 200px in the html. To get the actual dimensions we have
                    //created this image object.
                    var image_object = new Image();
                    image_object.src = $(this).find(".small").attr("src");

                    //This code is wrapped in the .load function which is important.
                    //width and height of the object would return 0 if accessed before
                    //the image gets loaded.
                    native_width = image_object.width;
                    native_height = image_object.height;
                }
                else
                {
                    //x/y coordinates of the mouse
                    //This is the position of .magnify with respect to the document.
                    var magnify_offset = $(this).offset();
                    //We will deduct the positions of .magnify from the mouse positions with
                    //respect to the document to get the mouse positions with respect to the
                    //container(.magnify)
                    var mx = e.pageX - magnify_offset.left;
                    var my = e.pageY - magnify_offset.top;

                    //Finally the code to fade out the glass if the mouse is outside the container
                    if(mx < $(this).width() && my < $(this).height() && mx > 0 && my > 0)
                    {
                        $(this).find(".large").fadeIn(100);
                    }
                    else
                    {
                        $(this).find(".large").fadeOut(100);
                    }
                    if($(this).find(".large").is(":visible"))
                    {
                        //The background position of .large will be changed according to the position
                        //of the mouse over the .small image. So we will get the ratio of the pixel
                        //under the mouse pointer with respect to the image and use that to position the
                        //large image inside the magnifying glass
                        var rx = Math.round(mx/$(this).find(".small").width()*native_width - $(this).find(".large").width()/2)*-1;
                        var ry = Math.round(my/$(this).find(".small").height()*native_height - $(this).find(".large").height()/2)*-1;
                        var bgp = rx + "px " + ry + "px";

                        //Time to move the magnifying glass with the mouse
                        var px = mx - $(this).find(".large").width()/2;
                        var py = my - $(this).find(".large").height()/2;
                        //Now the glass moves with the mouse
                        //The logic is to deduct half of the glass's width and height from the
                        //mouse coordinates to place it with its center at the mouse coordinates

                        //If you hover on the image now, you should see the magnifying glass in action
                        $(this).find(".large").css({left: px, top: py, backgroundPosition: bgp});
                    }
                }
            })



        })
    </script>


    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
        var options = {
            "key": "rzp_test_JHgzrt4lQIR3KO",
            "amount": "2000", // 2000 paise = INR 20
            "name": "ShivSaagaronline.com",
            "description":'@Model.Product.ProductName',
            "image": "http://shivamitcs.in/css/images/logo.png",
            "handler": function (response){
                alert(response.razorpay_payment_id);
            },
            "prefill": {
                "name": "Ajay Paliwal",
                "email": "ajaypaliwal.cto@outlook.com"
            },
            "notes": {
                "address": "Nathdwara"
            },
            "theme": {
                "color": "#F37254"
            }
        };
        var rzp1 = new Razorpay(options);

        document.getElementById('rzp-button1').onclick = function(e){
            rzp1.open();
            e.preventDefault();
        }
    </script>
}