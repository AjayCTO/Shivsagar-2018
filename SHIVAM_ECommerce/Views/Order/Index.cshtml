@model IEnumerable<SHIVAM_ECommerce.Models.Orders>

@{
    ViewBag.Title = "Index";
    var _CurrentUser = Session["CurrentUserContext"] as SHIVAM_ECommerce.ViewModels.CurrentUserContext;
}

<div class="row page-titles">


    <div class="col-md-5 align-self-center">
        <h3 class="text-primary">Order</h3>
    </div>
    <div class="col-md-7 align-self-center">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/Home">Home</a></li>
            <li class="breadcrumb-item active">Order</li>
        </ol>
    </div>
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">



            <div class="card">

                <div class="card-body">
                    @if (_CurrentUser.SupplierID == -1)
                    {

                        <div class="row">
                            <div class="col-md-4">

                            </div>
                            <div class="col-md-4">

                                <input type="text" class="form-control" style="position: absolute;top: 0px;z-index:10;" name="name" id="SupplierID" placeholder="Search By Supplier" />
                            </div>
                        </div>
                    }

                    <table style="width:100%;" id="myTable" class="table table-striped table-bordered dt-responsive">
                        <thead>
                            <tr>
                                <th>Order Number</th>
                                <th>Customer Name</th>

                                <th>Order Date</th>
                                <th>Ship Date</th>
                                <th>Payment</th>

                                <th>Total Price</th>
                                <th>Status</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
            <div id="OrderItems" class="modal fade" role="dialog">
                <div class="modal-dialog">

                    <!-- Modal content-->
                    <div class="modal-content">
                        <div class="modal-header">
                            <h4 class="modal-title">Order Items</h4>
                            <button type="button" class="close" data-dismiss="modal"></button>

                        </div>
                        <div class="modal-body">


                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        </div>
                    </div>

                </div>
            </div>

        </div>

    </div>
</div>
@section scripts{

    <style>
        .modal-dialog {
            max-width: 800px;
        }
    </style>


    <script>
        var _myTableData;
        var _supplierID = '@_CurrentUser.SupplierID';
        $(document).ready(function () {




            _myTableData = $("#myTable").DataTable({
                "processing": true, // for show progress bar
                "serverSide": true, // for process server side
                "filter": true, // this is for disable filter (search box)
                "orderMulti": false, // for disable multiple column at once
                "ajax": {
                    "url": "/Order/LoadData",
                    "type": "POST",
                    "datatype": "json",
                    "data": function (d) {

                        if ($.trim($("#SupplierID").attr("alt")) != "") {
                            d.SupplierID = $("#SupplierID").attr("alt");

                        }
                        else {
                            d.SupplierID = _supplierID;
                        }

                    }

                },
                "columns": [
                     {

                         "data": "OrderNumber", "name": "OrderNumber", "autoWidth": true
                     }, {

                         "data": "Name", "name": "Name", "autoWidth": true, "orderable": false,
                     },
                      {

                          "data": "OrderDate", "name": "OrderDate", "autoWidth": true, "render": function (value) {
                              if (value === null || value == undefined) return "";

                              var pattern = /Date\(([^)]+)\)/;
                              var results = pattern.exec(value);
                              var dt = new Date(parseFloat(results[1]));

                              return dt.getDate() + "/" + (dt.getMonth() + 1) + "/" + dt.getFullYear() + " " + dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds();
                          }
                      },
                         {

                             "data": "ShipDate", "name": "ShipDate", "autoWidth": true, "render": function (value) {
                                 if (value === null || value == undefined) return "";

                                 var pattern = /Date\(([^)]+)\)/;
                                 var results = pattern.exec(value);
                                 var dt = new Date(parseFloat(results[1]));

                                 return dt.getDate() + "/" + (dt.getMonth() + 1) + "/" + dt.getFullYear();
                             }
                         },
                           {

                               "data": "Paid", "name": "Paid", "autoWidth": true
                           },
                        {

                            "data": "TotalPrice", "name": "TotalPrice", "autoWidth": true, "render": function (value) {


                                return "₹ " + value;
                            }
                        },

                         {

                             "data": "Status", "name": "Status", "autoWidth": true, "orderable": false,
                         },
                         {
                             "orderable": false,
                             "mRender": function (data, type, row) {
                                 var _a = '<a onclick="ChangePaymentStatus(' + row.Id + ')"  class="btn btn-info" data-toggle="tooltip" data-placement="top" title="" data-original-title="Edit" ><i class="fa fa-money"  align="center"></i></a> <a href="/Order/Details?id=' + row.Id + '"   class="btn btn-success" data-toggle="tooltip" data-placement="top" title="" data-original-title="Details" ><i class="fa fa-info-circle"  align="center"></i></a> ';
                                 return _a + '<a href="#" class="btn btn-primary" onclick="GetOrderItems(' + row.Id + ')" data-toggle="tooltip" data-placement="top" title="" data-original-title="Order Items"><i class="fa fa-list"  align="center"></i></a>  ';
                             }
                         },
                ]
            });

            $("#SupplierID").change(function () {
                debugger;
                if ($(this).val() == "") {
                    $(this).attr("alt", -1);
                }

            });

            $("#SupplierID").blur(function () {
                _myTableData.clear().draw();
                //if ($.trim($(this).attr("alt")) != "") {

                //}
            });

            $("#SupplierID").autocomplete({

                source: function (request, response) {
                    debugger;
                    $(this).attr("alt", "");

                    $.ajax({

                        url: "/Order/SearchSupplier" + "/?SearchValue=" + this.element.val(),
                        type: "GET",
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        error: function () {
                            alert('There is a problem with the service!');
                        },
                        success: function (data) {
                            try {

                                $(this).attr("alt", 0);
                                response($.map(data, function (item) {
                                    return {
                                        label: item.SupplierName,  // tblLocation.lLoc
                                        value: item.SupplierID     // tblLocation.lID
                                    };
                                }));
                            } catch (_ex) {
                                alert(_ex);
                            }
                        }
                    });
                },
                select: function (event, ui) {
                    event.preventDefault();

                    $(this).val(ui.item.label);
                    $(this).attr("alt", ui.item.value);
                    $(this).trigger('change');
                    $(this).trigger('blur');
                },
                delay: 250,
                autoFocus: true,
                focus: function (event, ui) {
                    event.preventDefault();
                }
            });
        });

        function GetOrderItems(id) {

            $.get("/Order/GetOrderItems?orderID=" + id, function (data) {
                $("#OrderItems").find(".modal-body").html(data);
                $("#OrderItems").modal('show');
            });
        }

        function ChangePaymentStatus(id) {
            bootbox.confirm("are you sure you want to change this order's status to paid?", function (result) {

                if (result) {

                    $.ajax({
                        url: "/Order/UpdatePaymentStatus",
                        type: "POST",
                        dataType: "json",
                        data: JSON.stringify({ "ID": id }),
                        contentType: "application/json; charset=utf-8",
                        error: function () {
                            bootbox.alert('There is a problem with the service!');
                        },
                        success: function (data) {
                            try {
                                if (data.Success) {
                                    bootbox.alert("Payment Status updated successfully");
                                    _myTableData.clear().draw();
                                }
                                else {
                                    bootbox.alert("Error occurred during operation" + data.ex);
                                }

                            } catch (_ex) {
                                bootbox.alert(_ex);
                            }
                        }
                    });

                }




            });


        }
    </script>
}
