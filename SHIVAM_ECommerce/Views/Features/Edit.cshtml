@model SHIVAM_ECommerce.Models.Features

@{
    ViewBag.Title = "Edit Features";
}

<div class="row page-titles">


    <div class="col-md-5 align-self-center">
        <h3 class="text-primary">Features Edit</h3>
    </div>
    <div class="col-md-7 align-self-center">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/Home">Home</a></li>
            <li class="breadcrumb-item"><a href="/Features">Features</a></li>
            <li class="breadcrumb-item active">Features Edit</li>
        </ol>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card">

                <div class="card-body">
                    @using (Html.BeginForm("Edit", "Features", FormMethod.Post,
                            new { }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            @Html.HiddenFor(model => model.Id)
                            @Html.HiddenFor(model => model.CreatedDate)


                            @Html.ValidationSummary(true)

                            <div class="form-group">
                                @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.Title, new { @class = "form-control col-md-5 FeatureName" })
                                    @Html.ValidationMessageFor(model => model.Title)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Price, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(model => model.Price, new { @class = "form-control col-md-5" })
                                    @Html.ValidationMessageFor(model => model.Price)
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control col-md-5" })
                                    @Html.ValidationMessageFor(model => model.Description)
                                </div>
                            </div>





                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <button type="submit" value="Create" class="btn btn-primary">
                                        <i class="fa fa-check"></i>
                                        Update
                                    </button>
                                    <a href="/Features" class="btn btn-secondary btn-gray">
                                        <i class="fa fa-times"></i>
                                        Cancel
                                    </a>
                                </div>
                            </div>
                        </div>

                    }
                </div>

            </div>
        </div>

    </div>
    </div>







@section Scripts{

    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            var FeatureNames = '@Model.Title';

            var FeatureName = $.trim(FeatureNames).replace(/&#39;/g, "'").replace(/&amp;/g, "&").replace(/&quot;/g, "\"");

            $.validator.addMethod('FeatureName', function (values) {
                debugger;
                var value = $.trim(values);

                if (value.toLowerCase() == FeatureName.toLowerCase()) {
                    return true;
                }
                if ($.trim(value) != "") {
                    return CheckUniqueUserName(value);
                }
                else {
                    return true;
                }

            }, "Please enter a different Name ! It's already exist");

        });


        function CheckUniqueUserName(value) {
            var _x = true;
            $.ajax({
                url: "/Manufacturers/UniqueManufacture",
                data: JSON.stringify({ ManufactureName: value }),
                type: 'POST',
                async: false,
                contentType: 'application/json',
                dataType: 'json',
                success: function (result) {
                    _x = !result.IsAlreadyExist;
                },
                error: function (req, status, error) {
                    alert(error);
                }
            });

            return _x;
        }

    </script>
}
