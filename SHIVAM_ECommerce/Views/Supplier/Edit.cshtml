@model SHIVAM_ECommerce.Models.Supplier

@{
    ViewBag.Title = "Edit";
}


<style>
    .stars {
        color: #f55555;
    }
</style>
<div class="row page-titles">


    <div class="col-md-5 align-self-center">
        <h3 class="text-primary">Supplier Edit</h3>
    </div>
    <div class="col-md-7 align-self-center">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/Home">Home</a></li>
            <li class="breadcrumb-item"><a href="/Supplier">Supplier</a></li>
            <li class="breadcrumb-item active">Supplier Edit</li>
        </ol>
    </div>
</div>
<div class="card">

    <div class="card-body">

        @using (Html.BeginForm("Edit", "Supplier", FormMethod.Post,
                            new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @*@Html.ValidationSummary()*@

            @Html.HiddenFor(model => model.Id)
            @*@Html.HiddenFor(model => model.Logo)*@
            <input type="hidden" id="Logo" name="Logo" />
            @Html.HiddenFor(model => model.UserID)
            @Html.HiddenFor(model => model.PlanStartDate)
            @Html.HiddenFor(model => model.PlanEndDate)
            @Html.HiddenFor(model => model.ParentSupplierID)
            @Html.HiddenFor(model => model.RegisteredByID)
            @Html.HiddenFor(model=>model.CreatedDate)
            @Html.HiddenFor(model=>model.User_Name)
            @Html.HiddenFor(model=>model.UserCount)
            @Html.HiddenFor(model=>model.ProductCount)
            <input type="hidden" name="UserName" id="UserName" value="UserName">
            <input type="hidden" name="Password" id="Password" value="Password123">

            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        @*<div class="card-header">
                                <h3 class="card-title">Personal Information</h3>
                            </div>*@

                        <div class="card-body">
                            <div class="form-group">
                                <label>First Name<span class="stars">*</span></label>
                                <div>
                                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control requiredfield" })
                                    @Html.ValidationMessageFor(model => model.FirstName)
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Last Name<span class="stars">*</span></label>
                                <div>
                                    @Html.TextBoxFor(model => model.LastName, new { @class = "form-control requiredfield" })
                                    @Html.ValidationMessageFor(model => model.LastName)
                                </div>
                            </div>

                            <div class="form-group">
                                <label>Company Name<span class="stars">*</span></label>
                                <div>
                                    @Html.TextBoxFor(model => model.CompanyName, new { @class = "form-control requiredfield" })
                                    @Html.ValidationMessageFor(model => model.CompanyName)
                                </div>
                            </div>

                            <div class="form-group">
                                <label>Supplier Type</label>
                                <div>
                                    @Html.TextBoxFor(model => model.SupplierType, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SupplierType)
                                </div>
                            </div>
                            <div class="form-group">
                               <label>Email<span class="stars">*</span></label>
                                <div class="">
                                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control requiredfield UniqueEmailvalid" })
                                    @Html.ValidationMessageFor(model => model.Email)
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PlanID, "Plan", new { @class = "control-label " })
                                <div class="">
                                    @*@Html.DropDownList("PlanID", String.Empty)*@
                                    @Html.DropDownList("PlanID", (IEnumerable<SelectListItem>)ViewBag.PlanID, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PlanID)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Address1, new { @class = "control-label " })
                                <div class="">
                                    @Html.TextAreaFor(model => model.Address1, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Address1)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Address2, new { @class = "control-label " })
                                <div class="">
                                    @Html.TextAreaFor(model => model.Address2, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Address2)
                                </div>
                            </div>
                            <div id="selection">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.State, new { @class = "control-label " })
                                    <select id="listBox" onchange='selct_district(this.value)' class="form-control"></select>
                                    @Html.HiddenFor(model => model.State)
                                    @Html.ValidationMessageFor(model => model.State)
                                </div>



                                <div class="form-group">
                                    @Html.LabelFor(model => model.City, new { @class = "control-label " })
                                    <div class="">
                                        <select id='secondlist' class="form-control"></select>
                                        @Html.HiddenFor(model => model.City)

                                        @Html.ValidationMessageFor(model => model.City)
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Postal Code</label>
                                <div class="">
                                    @Html.TextBoxFor(model => model.PostalCode, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.PostalCode)
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Phone<span class="stars">*</span></label>
                                <div class="">
                                    @Html.TextBoxFor(model => model.Phone, new { @class = "form-control requiredfield Phonenumber" })
                                    @Html.ValidationMessageFor(model => model.Phone)
                                </div>
                            </div>

                            <div class="form-group">
                                <button type="submit" value="Create" class="btn btn-primary">
                                    <i class="fa fa-check"></i>
                                    Update
                                </button>
               
                                <a href="/Supplier" class="btn btn-secondary btn-gray">
                                    <i class="fa fa-times"></i>
                                    Cancel
                                </a>
                            </div>
                  

                        </div>
                    </div>


                </div>

                <div class="col-md-6">

                    <div class="card">
                        @*<div class="card-header">

                            </div>*@
                        <div class="card-body">
                            <h3 class="card-title text-center">Company Logo</h3>
                            <div style="text-align:center">
                                @if (Model.Logo != null)
                                {
                                    <img style="height:100px; width:120px;" src="@Url.Content("~/SupplierImage/"+Model.Logo)" alt="Alternate Text" />
                                }


                                @if (Model.Logo == null)
                                {
                                    <img style="height:100px; width:100px;" src="@Url.Content("~/CategoryImage/no-image.png")" alt="Alternate Text" />
                                }

                                <br />
                                <br />
                                <div class="form-group">

                                    <div class="col-md-12">

                                        @*<input type="file" name="file" id="file" style="width: 100%;" />*@
                                        <div class="custom-file">
                                            <input type="file" class="custom-file-input form-control" name="file" id="file" accept="image/*">
                                            <label class="custom-file-label">Choose file</label>
                                        </div>

                                        <div class="gallery"></div>
                                    </div>


                                </div>
                            </div>





                        </div>
                    </div>





                </div>


            </div>


        }




    </div>
</div>

@section Scripts {


@Scripts.Render("~/bundles/jqueryval")
<script src="~/Scripts/state.js"></script>

<script>
    var current = location.pathname;
    $('.nav li a').each(function () {
        var $this = $(this);
        // if the current path is like this link, make it active
        if ($this.attr('href').indexOf(current) !== -1) {
            if (current != "/") {
                $this.addClass('active');

            }
        }
    })
    var imagesPreview = function (input, placeToInsertImagePreview) {

        if (input.files) {
            var filesAmount = input.files.length;

            for (i = 0; i < filesAmount; i++) {
                var reader = new FileReader();

                reader.onload = function (event) {
                    var _multiple = $.trim($(input).attr("multiple"));
                    if (_multiple == "") { $(placeToInsertImagePreview).html(""); }
                    $($.parseHTML('<img style="height:50px; width:50px; margin-right:10px; margin-top:5px;">')).attr('src', event.target.result).appendTo(placeToInsertImagePreview);
                }

                reader.readAsDataURL(input.files[i]);
            }
        }

    };
    $('.custom-file-input').on('change', function () {
        imagesPreview(this, 'div.gallery');
    });

    $(document).on("keypress", ".customColumnData", function (evt) {

        var keycode = evt.charCode || evt.keyCode;
        if (keycode == 35 || keycode == 64) { //Enter key's keycode
            return false;
        }
    });
</script>
<script>
    $("select").addClass("form-control");
</script>

    <script>


        $(document).ready(function () {

         
            $("#Logo").val('@Model.Logo');
            $(window).load(function() 
            {
                $("#listBox").val('@Model.State');
                selct_district('@Model.State');
                $("#secondlist").val('@Model.City');
            });
        

            $("#listBox").change(function () {
                debugger;
                $("#State").val($(this).val());
                $("#City").val($("#secondlist").val());
            });

            $("#secondlist").change(function () {
                $("#City").val($(this).val());
            });


    

            var Emailcheck = '@Model.Email';


            $.validator.addMethod("requiredfield", function (value, element) {
             
                debugger;
                if($.trim(value)==""){
                    return false;
                }
                else {
                    return true;
                }
            }, "This field is required");

            $.validator.addMethod("Phonenumber", function (phone_number, element) {
                debugger;
                phone_number = phone_number.replace(/\s+/g, "");
                return this.optional(element) || phone_number.length > 9 &&
                phone_number.match(/^(\+?1-?)?(\([2-9]\d{2}\)|[0-9]\d{2})-?[0-9]\d{2}-?\d{4}$/);
            }, "Please specify a valid phone number");


            $.validator.addMethod("UniqueEmailvalid", function (value, element) {

               
                return /^\b[A-Z0-9._%-]+@@[A-Z0-9.-]+\.[A-Z]{2,4}\b$/i.test(value);
            }, "Please enter valid  email");


            $.validator.addMethod('UniqueEmail', function (value) {
                debugger;
                if (value.toLowerCase() == Emailcheck.toLowerCase()) {
                    return true;
                }
                if ($.trim(value) != "") {

                    return CheckUniqueEmail(value);
                }
                else {
                    return true;
                }

            },"Please enter a different Email ! It's already Exist");




        });
            function CheckUniqueEmail(value) {
                var _x = true;
                $.ajax({
                    url: "/Supplier/UniqueEmail",
                    data: JSON.stringify({ Email: value }),
                    type: 'POST',
                    async: false,
                    contentType: 'application/json',
                    dataType: 'json',
                    success: function (result) {
                        _x = !result.IsAlreadyExist;
                    },
                    error: function (req, status, error) {
                        alert(error);
                    }
                });

                return _x;
            }

    </script>

}

